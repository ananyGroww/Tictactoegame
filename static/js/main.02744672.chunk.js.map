{"version":3,"sources":["history.js","gamescreen/game.js","gamescreen/gameover.js","playersinfo/player.js","routes.js","index.js"],"names":["history","TicTacToeGame","props","idToIndex","str","updateBoard","row","col","boardCopy","state","board","currentPlaySymbol","setState","updateCurrentSymbol","onTilePress","event","target","id","logicOfGame","alert","rowFound","gameBoard","i","colFound","diagFound","gameOver","startPlayer","wins1","loss2","winner","player1","wins2","loss1","player2","setTimeout","finishGame","push","pathname","PageTwo","className","onClick","console","log","location","React","Component","GameFinished","this","PlayerDetails","PageOne","onSubmit","onEnterKey","htmlFor","type","value","onChange","onPlayerNameChange","placeholder","onDropdownChange","name","defaultValue","clearInputField","startGame","statePlayerProp","preventDefault","alpha","Routes","path","exact","component","EnterPlayerDetails","Game","GameOver","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.02744672.chunk.js","sourcesContent":["import { createBrowserHistory as history } from 'history';\n\nexport default history();","// 1.  ERR01 TicTacToeGame/onTilePress\n\nimport '../game.css';\n\nimport React from 'react';\n\nimport history from '../history';\n\nclass TicTacToeGame extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(`constructor/game.js`, props.location.state);\n        this.state = {\n            player1: props.location.state.player1,//`predefined1`,\n            player2: props.location.state.player2,//`predefined2`,\n            startPlayer: props.location.state.startPlayer,//`player1`,\n            wins1: 0,\n            loss1: 0,\n            wins2: 0,\n            loss2: 0,\n            board: [ [``,``,``], [``,``,``], [``,``,``] ],\n            winner: `none`,\n            currentPlaySymbol: `X`,\n        };\n    }\n    idToIndex = (str) => {\n        if(str===`zerozero0133`) return [0,0];\n        if(str===`onezero0133`) return [1,0];\n        if(str===`twozero0133`) return [2,0];\n        if(str===`zeroone0133`) return [0,1];\n        if(str===`oneone0133`) return [1,1];\n        if(str===`twoone0133`) return [2,1];\n        if(str===`zerotwo0133`) return [0,2];\n        if(str===`onetwo0133`) return [1,2];\n        if(str===`twotwo0133`) return [2,2];\n    }\n    updateBoard = (row, col) => {\n        let boardCopy = this.state.board;\n        boardCopy[ row ][ col ] = this.state.currentPlaySymbol; \n        this.setState( { board : boardCopy })\n    }\n    updateCurrentSymbol = () => {\n        if( this.state.currentPlaySymbol === `X` ){\n            this.setState( { currentPlaySymbol: `O` } );\n        }\n        else{\n            this.setState( { currentPlaySymbol: 'X' } );\n        }\n    }\n    onTilePress = (event) => {\n        let [row, col] = this.idToIndex(event.target.id);\n        let boardalias = this.state.board;\n        if( boardalias[row][col] !== `` ){\n            alert('This box is already marked! ERR01');\n            return;\n        }\n        this.updateBoard( row, col );\n        this.logicOfGame();\n        this.updateCurrentSymbol();        \n    }\n    rowFound = () => {\n        let gameBoard = this.state.board;\n        for( let i = 0; i < 3 ; i++ ){\n            if( (gameBoard[i][0] === gameBoard[i][1]) && (gameBoard[i][1] === gameBoard[i][2]) && (gameBoard[i][2] === gameBoard[i][0]) && (gameBoard[i][2] === `O` || gameBoard[i][2] === `X` ) ) return 1;\n        }\n        return 0;\n    }\n    colFound = () => {\n        let gameBoard = this.state.board;\n        for( let i = 0; i < 3 ; i++ ){\n            if( (gameBoard[0][i] === gameBoard[1][i]) && (gameBoard[1][i] === gameBoard[2][i]) && (gameBoard[2][i] === gameBoard[0][i]) && (gameBoard[2][i] === `O` || gameBoard[2][i] === `X` ) ) return 1;\n        }\n        return 0;\n    }\n    diagFound = () => {\n        let gameBoard = this.state.board;\n        if( (gameBoard[0][0] === gameBoard[1][1]) && (gameBoard[1][1] === gameBoard[2][2]) && (gameBoard[2][2] === gameBoard[0][0]) && (gameBoard[2][2] === `O` || gameBoard[2][2] === `X` ) ) return 1;\n        if( (gameBoard[0][2] === gameBoard[1][1]) && (gameBoard[1][1] === gameBoard[2][0]) && (gameBoard[2][0] === gameBoard[0][2]) && (gameBoard[0][2] === `O` || gameBoard[0][2] === `X` ) ) return 1;\n        return 0;\n    }\n    logicOfGame = () => {\n         if( this.rowFound()===1 || this.colFound()===1 || this.diagFound()===1 ){\n            // console.log(`logicofgame/game.js`, this.rowFound(), this.colFound(), this.diagFound());\n            this.gameOver();\n         }\n    }\n    gameOver = () => {\n        if( this.state.currentPlaySymbol === `X`){\n            let whoWon = this.state.startPlayer;\n            if(whoWon===`player1`){\n                this.setState( {wins1: (this.state.wins1+1), loss2: (this.state.loss2+1), winner: this.state.player1 } )\n            }\n            else{\n                this.setState( {wins2: (this.state.wins2+1), loss1: (this.state.loss1+1), winner: this.state.player2 } )\n            }\n        }\n        else{\n            let whoWon;\n            if(this.state.startPlayer===`player1`)  whoWon=`player2`; else whoWon=`player1`;\n            if(whoWon===`player1`){\n                this.setState( {wins1: (this.state.wins1+1), loss2: (this.state.loss2+1), winner: this.state.player1 } )\n            }\n            else{\n                this.setState( {wins2: (this.state.wins2+1), loss1: (this.state.loss1+1), winner: this.state.player2 } )\n            }\n        }\n        setTimeout(() => {\n            alert(`The winner is `+this.state.winner+`!`);\n            this.finishGame();\n        }, 400);\n        // alert(`The winner is `+this.state.winner+`!`);\n        // history.push({\n        //     pathname: '/gameover',\n        //     state: this.state,\n        // });\n    }\n    // https://stackoverflow.com/a/45263164\n    finishGame = () => {\n        history.push({\n            pathname: '/gameover',\n            state: this.state,\n        });\n    }\n    PageTwo = () => {\n        let board = this.state.board;\n        return (\n            <div className=\"initPageTwo0133\">\n                <div className=\"leftPane0133initPageTwo\">\n                    <div id=\"player1Name0133leftPane\"><h2>{this.state.player1}</h2></div>\n                    <div id=\"player1CounterPanel0133\">\n                        <div>Wins <div id=\"player1Wins0133\">{this.state.wins1}</div></div>\n                        <div>Losses <div id=\"player1Losses0133\">{this.state.loss1}</div></div>\n                    </div>\n                </div>\n                <div className=\"centralPlayArea0133troot\">\n                    <h1>Tic-Tac-Toe</h1>\n                    <div className=\"ninePanel0133centralPlayArea\">\n                        <div className=\"row00133ninePanel\">\n                            <div onClick={this.onTilePress} className=\"cell\" id=\"zerozero0133\">{board[0][0]}</div>\n                            <div onClick={this.onTilePress} className=\"cell\" id=\"onezero0133\">{board[1][0]}</div>\n                            <div onClick={this.onTilePress} className=\"cell\" id=\"twozero0133\">{board[2][0]}</div>\n                        </div>\n                        <div className=\"row10133ninePanel\">\n                            <div onClick={this.onTilePress} className=\"cell\" id=\"zeroone0133\">{board[0][1]}</div>\n                            <div onClick={this.onTilePress} className=\"cell\" id=\"oneone0133\">{board[1][1]}</div>\n                            <div onClick={this.onTilePress} className=\"cell\" id=\"twoone0133\">{board[2][1]}</div>\n                        </div>\n                        <div className=\"row20133ninePanel0133\">\n                            <div onClick={this.onTilePress} className=\"cell\" id=\"zerotwo0133\">{board[0][2]}</div>\n                            <div onClick={this.onTilePress} className=\"cell\" id=\"onetwo0133\">{board[1][2]}</div>\n                            <div onClick={this.onTilePress} className=\"cell\" id=\"twotwo0133\">{board[2][2]}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"rightPane0133root\">\n                    <div id=\"player2Name0133rightPane\"><h2>{this.state.player2}</h2></div>\n                    <div id=\"player2CounterPanel0133\">\n                        <div>Wins <div id=\"player2Wins0133\">{this.state.wins2}</div></div>\n                        <div>Losses <div id=\"player2Losses0133\">{this.state.loss2}</div></div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    render(props) {\n        return (\n            <this.PageTwo props/>\n        );\n    }\n}\n// ReactDOM.render(\n//     <TicTacToeGame/>,\n//     document.querySelector('#root')\n// );\nexport default TicTacToeGame;","import React from 'react';\n\nclass GameFinished extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            winner : props.location.state.winner,\n        }\n    }\n    render() {\n        console.log(`GameFinished/gameover.js`);\n        return(\n            <div className=\"winner0133root\">\n                The winner is {this.state.winner}\n            </div>\n        );\n    }\n}\n// ReactDOM.render(\n//     <GameFinished/>,\n//     document.querySelector('#root')\n// );\nexport default GameFinished;","import '../index.css';\n\nimport React from 'react';\n\nimport history from '../history';\n\nclass PlayerDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            player1: null,\n            player2: null,\n            startPlayer: `player1`,\n        };\n        console.log(`PlayerDetails/player.js`,this.state);\n        /* legacy method of solving unknown `this`\n        this.onInputPlayer1 = this.onInputPlayer1.bind(this); */\n    }\n    /* modern method of solving unknown `this`\n    PageOne(){} is now: */\n    PageOne = (props) => {\n        return (\n            <div className=\"initPageOne0133\">\n                <h1>Please type names of both players</h1>\n                <form onSubmit={this.onEnterKey} className=\"nameForm0133root\">\n                    <ul>\n                        <li className=\"user1Name0133nameForm\">\n                            <label htmlFor=\"user10133\">Player 1</label>\n                            <input type=\"text\" value={this.state.player1} onChange={this.onPlayerNameChange} id=\"user10133\" placeholder=\"Type the name of first player\"/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"user20133\">Player 2</label>\n                            <input type=\"text\" value={this.state.player2} onChange={this.onPlayerNameChange} id=\"user20133\" placeholder=\"Type the name of second player\"/>\n                        </li>\n                        <li>\n                            <label htmlFor=\"startingPlayer0133\">Who will start? (with X)</label>\n                            <select value={this.state.startPlayer} onChange={this.onDropdownChange} name=\"startingPlayer0133\" id=\"startingPlayer0133\">\n                                <option value=\"player1\" id=\"player10133\" defaultValue>Player 1</option>\n                                <option value=\"player2\" id=\"player20133\">Player 2</option>\n                            </select>\n                        </li>\n                        <li>\n                            <button onClick={this.clearInputField}>Clear current entries</button>\n                            {/* <Link to=\"/game\"><button onClick={this.startGame}>Start game</button></Link> */}\n                            <button onClick={this.startGame}>Start game</button>\n                        </li>\n                    </ul>\n                </form>\n            </div>\n        );\n    }\n    clearInputField = (event) => {\n        console.log(`clearinputfield/player.js BEFORE `, this.state);\n        this.setState( { player1: null, player2: null, startPlayer: `player1` } );\n        setTimeout(() => {\n            console.log(`clearinputfield/player.js AFTER `, this.state);\n        }, 10);\n        \n    }\n    onPlayerNameChange  = (event) => {\n        let statePlayerProp = ``;\n        if(event.target.id === `user10133`){\n            statePlayerProp = `player1`;\n        }\n        else{\n            statePlayerProp = `player2`;\n        }\n        this.setState( { [statePlayerProp]: event.target.value } );\n        // setTimeout(() => {\n        //     console.log(`onPlayerNameChange/player.js`, this.state);  \n        // }, 10);\n        // console.log(`onPlayerNameChange/player.js`, this.state);\n    }\n    onDropdownChange = (event) => {\n        this.setState( { startPlayer : event.target.value });\n        // setTimeout(() => {\n        //     console.log(`onDropdownChange/player.js`, this.state);\n        // }, 50);\n        // console.log(`onDropdownChange/player.js`, this.state);\n    }\n    startGame = () => {\n        console.log(`startGame/player.js`, this.state);\n        // https://stackoverflow.com/a/45263164\n        history.push({\n            pathname:'/game',\n            state: this.state,\n        });\n    }\n    onEnterKey =  (event) => {\n        event.preventDefault();\n    }\n    render(props) {\n        return(\n            <this.PageOne alpha={`sigma`}/>\n        );\n    }\n}\n// ReactDOM.render(\n//     <PlayerDetails/>,\n//     document.querySelector('#root')\n// );\nexport default PlayerDetails;","import React from 'react';\n\nimport {\n  Route,\n  Router,\n  Switch,\n} from 'react-router-dom';\n\nimport Game from './gamescreen/game';\nimport GameOver from './gamescreen/gameover';\nimport history from './history';\nimport EnterPlayerDetails from './playersinfo/player';\n\nclass Routes extends React.Component {\n    render() {\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route path='/' exact component={EnterPlayerDetails}/>\n                    <Route path='/game' exact component={Game}/>\n                    <Route path='/gameover' exact component={GameOver}/>\n                </Switch>\n            </Router>\n        );\n    }\n}\nexport default Routes;","// KNOWN BUGS & ISSUES\n// 1.  empty a input box on the webpage. press enter. see console. \n// 2.  the data in state obj is one keystroke behind whats shown \n//      on website. (Obs: printing in console again after 50 milliseconds, prints correct value)\n// 4.  On pressing `clear entries` button, the state clears but the input box still contains values.\n// 3.  Line37 player.js (<select> line) not working (made as shown as in https://reactjs.org/docs/forms.html#:~:text=implement%20a%20controlled%20component)\n//      so that component is controlled\n//      <OR>\n//      For <input> fields to maintain the src of truth be VirtualDOM we add `value={this.state.player2}`, so what do we do for dropdown menus (<select>) such\n//      </select> that their src of truth also remains to be VirtualDOM? (Eg: Line33 vs Line38 in player.js) (Is what shown here: https://stackoverflow.com/a/29109365 is what I have done?)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './routes';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <Routes/>\n            </BrowserRouter>\n        );\n    }\n}\nReactDOM.render(\n    <App/>,\n    document.querySelector('#root')\n);"],"sourceRoot":""}